/* src/styles/bridgeBTC.css */

.bridge-page {
  padding: 2rem;
  max-width: 700px;
  margin: 0 auto;
}

.bridge-page h1 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  background: linear-gradient(135deg, #667eea, #764ba2);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-align: center;
}

.bridge-subtitle {
  text-align: center;
  color: #64748b;
  margin-bottom: 2rem;
  font-size: 1.125rem;
}

.bridge-container {
  background: white;
  padding: 2.5rem;
  border-radius: 20px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
  margin-bottom: 2rem;
}

.network-selector {
  display: flex;
  gap: 1rem;
  margin-bottom: 2rem;
}

.network-option {
  flex: 1;
  padding: 1.5rem;
  border: 2px solid #e2e8f0;
  border-radius: 12px;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease;
  background: white;
}

.network-option:hover {
  border-color: #667eea;
  transform: translateY(-2px);
}

.network-option.active {
  border-color: #667eea;
  background: linear-gradient(135deg, #667eea15, #764ba215);
}

.network-icon {
  font-size: 2.5rem;
  margin-bottom: 0.5rem;
}

.network-name {
  font-weight: 600;
  color: #1e293b;
  margin-bottom: 0.25rem;
}

.network-status {
  font-size: 0.875rem;
  color: #64748b;
}

.bridge-flow {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  margin: 2rem 0;
}

.bridge-chain {
  flex: 1;
  text-align: center;
  padding: 1rem;
  background: #f8fafc;
  border-radius: 12px;
}

.bridge-chain-name {
  font-weight: 600;
  color: #1e293b;
  margin-bottom: 0.5rem;
}

.bridge-chain-icon {
  font-size: 2rem;
}

.bridge-arrow {
  font-size: 2rem;
  color: #667eea;
  animation: bounce 2s infinite;
}

@keyframes bounce {
  0%, 100% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(10px);
  }
}

.bridge-form {
  margin-top: 2rem;
}

.bridge-btn {
  width: 100%;
  padding: 1.25rem;
  font-size: 1.125rem;
  background: linear-gradient(135deg, #f59e0b, #d97706);
  color: white;
  border: none;
  border-radius: 12px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 1rem;
}

.bridge-btn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 16px rgba(245, 158, 11, 0.3);
}

.bridge-btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.bridge-info {
  background: #dbeafe;
  border: 1px solid #3b82f6;
  color: #1e40af;
  padding: 1rem;
  border-radius: 8px;
  margin-top: 1rem;
  font-size: 0.9rem;
  line-height: 1.6;
}

.bridge-features {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-top: 2rem;
}

.feature-card {
  background: #f8fafc;
  padding: 1.5rem;
  border-radius: 12px;
  text-align: center;
  border: 2px solid #e2e8f0;
  transition: all 0.3s ease;
}

.feature-card:hover {
  border-color: #667eea;
  transform: translateY(-4px);
}

.feature-icon {
  font-size: 2.5rem;
  margin-bottom: 0.5rem;
}

.feature-title {
  font-weight: 600;
  color: #1e293b;
  margin-bottom: 0.5rem;
}

.feature-description {
  font-size: 0.875rem;
  color: #64748b;
  line-height: 1.5;
}

.bridge-stats {
  background: linear-gradient(135deg, #667eea, #764ba2);
  color: white;
  padding: 2rem;
  border-radius: 16px;
  margin-top: 2rem;
}

.bridge-stats h3 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  opacity: 0.95;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1.5rem;
}

.stat-item {
  text-align: center;
}

.stat-value {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 0.25rem;
}

.stat-label {
  font-size: 0.875rem;
  opacity: 0.9;
}

/* Responsive */
@media (max-width: 768px) {
  .bridge-page {
    padding: 1rem;
  }

  .bridge-page h1 {
    font-size: 2rem;
  }

  .bridge-container {
    padding: 1.5rem;
  }

  .network-selector {
    flex-direction: column;
  }

  .bridge-flow {
    flex-direction: column;
  }

  .bridge-arrow {
    transform: rotate(90deg);
  }

  @keyframes bounce {
    0%, 100% {
      transform: rotate(90deg) translateX(0);
    }
    50% {
      transform: rotate(90deg) translateX(10px);
    }
  }
}